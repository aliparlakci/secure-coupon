{
  "contractName": "TicketHelper",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "eventName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "NewEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ticketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "eventName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "date",
          "type": "uint32"
        }
      ],
      "name": "NewTicket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_eventName",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "_date",
          "type": "uint32"
        }
      ],
      "name": "createEvent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventId",
          "type": "uint256"
        }
      ],
      "name": "createTicket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eventTicketCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "events",
      "outputs": [
        {
          "internalType": "string",
          "name": "eventName",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "date",
          "type": "uint32"
        },
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "totalTickets",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerTicketCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ticketToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tickets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "eventId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "transferCount",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTicketsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEventsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"NewEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"date\",\"type\":\"uint32\"}],\"name\":\"NewTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_eventName\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"_date\",\"type\":\"uint32\"}],\"name\":\"createEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_eventId\",\"type\":\"uint256\"}],\"name\":\"createTicket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eventTicketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"eventName\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"date\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"totalTickets\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEventsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTicketsByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerTicketCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ticketToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"transferCount\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/home/ali/source/secure-ticket/contracts/ticketHelper.sol\":\"TicketHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ali/source/secure-ticket/contracts/ownable.sol\":{\"keccak256\":\"0x6694abc0baa785b7f264982aa07d5fb7a13dab9e4e50e7710ecdbf1e72b4d022\",\"urls\":[\"bzz-raw://070fd800b9e6d326c14e755b1f4cd6b2a2ea4eaee3d6c448f24ebba77576b115\",\"dweb:/ipfs/QmV1mqW7ejRvXjyCGAcDmofzuot77fWMRXjGsKNXSvGbzn\"]},\"/home/ali/source/secure-ticket/contracts/ticketFactory.sol\":{\"keccak256\":\"0xbe506225d49adbe357a1bd2d3d052fceecd1bec48eba86653347fd4020676170\",\"urls\":[\"bzz-raw://4f7cc64b9b3b57183da6f6bdee233c9d8e514d9d9a53e1fadb9cf73ac22723ae\",\"dweb:/ipfs/QmeX9jTsZoVmpWNxD7mSp7NHtpSL8CCGU4KwjDb9L7AaQD\"]},\"/home/ali/source/secure-ticket/contracts/ticketHelper.sol\":{\"keccak256\":\"0x6f0faca021984e1d87de29474074e1e5431f25db13715745f2b63db85306ab1b\",\"urls\":[\"bzz-raw://79e2574d4e680628bb7a64364fcf325719dc04fbb53ebfc70e0b3dfa81d37ec8\",\"dweb:/ipfs/QmTnc8p9TiCTNqDqzC8PNY4mSGbFfiFC98xSpL4Veee8jB\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361116a806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806350b447121161008c578063715018a611610066578063715018a6146104db5780638da5cb5b146104e55780638f32d59b1461052f578063f2fde38b14610551576100cf565b806350b447121461039b57806354fdfd4e146103ea57806367aa23e214610442576100cf565b80630497879c146100d45780630b791430146101025780631af32d78146102025780632b08e824146102445780632bdd59b0146102b257806347fc216e1461037d575b600080fd5b610100600480360360208110156100ea57600080fd5b8101908080359060200190929190505050610595565b005b61012e6004803603602081101561011857600080fd5b8101908080359060200190929190505050610927565b60405180806020018563ffffffff1663ffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1663ffffffff168152602001828103825286818151815260200191508051906020019080838360005b838110156101c45780820151818401526020810190506101a9565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b61022e6004803603602081101561021857600080fd5b8101908080359060200190929190505050610a3c565b6040518082815260200191505060405180910390f35b6102706004803603602081101561025a57600080fd5b8101908080359060200190929190505050610a54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037b600480360360408110156102c857600080fd5b81019080803590602001906401000000008111156102e557600080fd5b8201836020820111156102f757600080fd5b8035906020019184600183028401116401000000008311171561031957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190505050610a87565b005b610385610c9e565b6040518082815260200191505060405180910390f35b6103c7600480360360208110156103b157600080fd5b8101908080359060200190929190505050610cab565b604051808381526020018260ff1660ff1681526020019250505060405180910390f35b61042c6004803603602081101561040057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce9565b6040518082815260200191505060405180910390f35b6104846004803603602081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d01565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104c75780820151818401526020810190506104ac565b505050509050019250505060405180910390f35b6104e3610e2b565b005b6104ed610efb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610537610f24565b604051808215151515815260200191505060405180910390f35b6105936004803603602081101561056757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7b565b005b80806002805490501015610611576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4576656e7420646f6573206e6f7420657869737421000000000000000000000081525060200191505060405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff166002828154811061063657fe5b906000526020600020906002020160010160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461068857600080fd5b60006001806040518060400160405280878152602001600060ff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548160ff021916908360ff1602179055505050039050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600284815481106107af57fe5b9060005260206000209060020201600101601881819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff160217905550507f18b0cd07168eb72bb0c5bd4ef7b666b3dd0c9baa9874f61bba1374eb59103c0081856002878154811061082957fe5b90600052602060002090600202016000016002888154811061084757fe5b906000526020600020906002020160010160009054906101000a900463ffffffff1660405180858152602001848152602001806020018363ffffffff1663ffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156109105780601f106108e557610100808354040283529160200191610910565b820191906000526020600020905b8154815290600101906020018083116108f357829003601f168201915b50509550505050505060405180910390a150505050565b6002818154811061093457fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e05780601f106109b5576101008083540402835291602001916109e0565b820191906000526020600020905b8154815290600101906020018083116109c357829003601f168201915b5050505050908060010160009054906101000a900463ffffffff16908060010160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160189054906101000a900463ffffffff16905084565b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600260405180608001604052808681526020018563ffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610b18929190611090565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555050500390507f39de19294043c7c50481199e26d4db1752b963bc0ac61b76d22d9810e7603e708184843360405180858152602001806020018463ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b83811015610c5c578082015181840152602081019050610c41565b50505050905090810190601f168015610c895780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050565b6000600280549050905090565b60018181548110610cb857fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900460ff16905082565b60056020528060005260406000206000915090505481565b606080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610d725781602001602082028038833980820191505090505b509050600080600090505b600180549050811015610e20578473ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e135780838381518110610dfe57fe5b60200260200101818152505081806001019250505b8080600101915050610d7d565b508192505050919050565b610e33610f24565b610e3c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610f83610f24565b610f8c57600080fd5b610f9581610f98565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fd257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106110d157805160ff19168380011785556110ff565b828001600101855582156110ff579182015b828111156110fe5782518255916020019190600101906110e3565b5b50905061110c9190611110565b5090565b61113291905b8082111561112e576000816000905550600101611116565b5090565b9056fea265627a7a7231582034a8d8e545ccaa63d8ac3d20d727adb4474ccbd49b4f58c1a82a69fc21d9d91c64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c806350b447121161008c578063715018a611610066578063715018a6146104db5780638da5cb5b146104e55780638f32d59b1461052f578063f2fde38b14610551576100cf565b806350b447121461039b57806354fdfd4e146103ea57806367aa23e214610442576100cf565b80630497879c146100d45780630b791430146101025780631af32d78146102025780632b08e824146102445780632bdd59b0146102b257806347fc216e1461037d575b600080fd5b610100600480360360208110156100ea57600080fd5b8101908080359060200190929190505050610595565b005b61012e6004803603602081101561011857600080fd5b8101908080359060200190929190505050610927565b60405180806020018563ffffffff1663ffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018363ffffffff1663ffffffff168152602001828103825286818151815260200191508051906020019080838360005b838110156101c45780820151818401526020810190506101a9565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b61022e6004803603602081101561021857600080fd5b8101908080359060200190929190505050610a3c565b6040518082815260200191505060405180910390f35b6102706004803603602081101561025a57600080fd5b8101908080359060200190929190505050610a54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037b600480360360408110156102c857600080fd5b81019080803590602001906401000000008111156102e557600080fd5b8201836020820111156102f757600080fd5b8035906020019184600183028401116401000000008311171561031957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803563ffffffff169060200190929190505050610a87565b005b610385610c9e565b6040518082815260200191505060405180910390f35b6103c7600480360360208110156103b157600080fd5b8101908080359060200190929190505050610cab565b604051808381526020018260ff1660ff1681526020019250505060405180910390f35b61042c6004803603602081101561040057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce9565b6040518082815260200191505060405180910390f35b6104846004803603602081101561045857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d01565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104c75780820151818401526020810190506104ac565b505050509050019250505060405180910390f35b6104e3610e2b565b005b6104ed610efb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610537610f24565b604051808215151515815260200191505060405180910390f35b6105936004803603602081101561056757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f7b565b005b80806002805490501015610611576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4576656e7420646f6573206e6f7420657869737421000000000000000000000081525060200191505060405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff166002828154811061063657fe5b906000526020600020906002020160010160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461068857600080fd5b60006001806040518060400160405280878152602001600060ff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548160ff021916908360ff1602179055505050039050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600284815481106107af57fe5b9060005260206000209060020201600101601881819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff160217905550507f18b0cd07168eb72bb0c5bd4ef7b666b3dd0c9baa9874f61bba1374eb59103c0081856002878154811061082957fe5b90600052602060002090600202016000016002888154811061084757fe5b906000526020600020906002020160010160009054906101000a900463ffffffff1660405180858152602001848152602001806020018363ffffffff1663ffffffff1681526020018281038252848181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156109105780601f106108e557610100808354040283529160200191610910565b820191906000526020600020905b8154815290600101906020018083116108f357829003601f168201915b50509550505050505060405180910390a150505050565b6002818154811061093457fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156109e05780601f106109b5576101008083540402835291602001916109e0565b820191906000526020600020905b8154815290600101906020018083116109c357829003601f168201915b5050505050908060010160009054906101000a900463ffffffff16908060010160049054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160189054906101000a900463ffffffff16905084565b60046020528060005260406000206000915090505481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006001600260405180608001604052808681526020018563ffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600063ffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610b18929190611090565b5060208201518160010160006101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160186101000a81548163ffffffff021916908363ffffffff16021790555050500390507f39de19294043c7c50481199e26d4db1752b963bc0ac61b76d22d9810e7603e708184843360405180858152602001806020018463ffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b83811015610c5c578082015181840152602081019050610c41565b50505050905090810190601f168015610c895780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a1505050565b6000600280549050905090565b60018181548110610cb857fe5b90600052602060002090600202016000915090508060000154908060010160009054906101000a900460ff16905082565b60056020528060005260406000206000915090505481565b606080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610d725781602001602082028038833980820191505090505b509050600080600090505b600180549050811015610e20578473ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610e135780838381518110610dfe57fe5b60200260200101818152505081806001019250505b8080600101915050610d7d565b508192505050919050565b610e33610f24565b610e3c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610f83610f24565b610f8c57600080fd5b610f9581610f98565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610fd257600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106110d157805160ff19168380011785556110ff565b828001600101855582156110ff579182015b828111156110fe5782518255916020019190600101906110e3565b5b50905061110c9190611110565b5090565b61113291905b8082111561112e576000816000905550600101611116565b5090565b9056fea265627a7a7231582034a8d8e545ccaa63d8ac3d20d727adb4474ccbd49b4f58c1a82a69fc21d9d91c64736f6c63430005100032",
  "sourceMap": "64:536:5:-;;;518:10:3;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;64:536:5;;;;;;",
  "deployedSourceMap": "64:536:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;64:536:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:361:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1173:361:4;;;;;;;;;;;;;;;;;:::i;:::-;;511:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;511:21:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;511:21:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;595:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;595:46:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;543;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;543:46:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;954:209;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;954:209:4;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;954:209:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;954:209:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;954:209:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;954:209:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;506:92:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;482:23:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;482:23:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;647:49:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;109:391:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;109:391:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;109:391:5;;;;;;;;;;;;;;;;;1262:127:3;;;:::i;:::-;;637:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;920:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1547:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1547:101:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1173:361:4;1229:8;777:7;760:6;:13;;;;:24;;752:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:8;915:10;887:38;;:6;894:8;887:16;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:38;;;879:47;;;;;;1269:7;1315:1;1279:7;1292:19;;;;;;;;1299:8;1292:19;;;;1309:1;1292:19;;;;;1279:33;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1279:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;1269:47;;1346:10;1326:13;:17;1340:2;1326:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1367:16;:28;1384:10;1367:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;1407:6;1414:8;1407:16;;;;;;;;;;;;;;;;;;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:74;1463:2;1467:8;1477:6;1484:8;1477:16;;;;;;;;;;;;;;;;;;:26;;1505:6;1512:8;1505:16;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1453:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;936:1;820;1173:361;;:::o;511:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;595:46::-;;;;;;;;;;;;;;;;;:::o;543:::-;;;;;;;;;;;;;;;;;;;;;;:::o;954:209::-;1032:7;1097:1;1042:6;1054:39;;;;;;;;1060:10;1054:39;;;;1072:5;1054:39;;;;;;1079:10;1054:39;;;;;;1091:1;1054:39;;;;;1042:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1042:52:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:56;1032:66;;1113:43;1122:2;1126:10;1138:5;1145:10;1113:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1113:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;954:209;;;:::o;506:92:5:-;555:4;578:6;:13;;;;571:20;;506:92;:::o;482:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;647:49::-;;;;;;;;;;;;;;;;;:::o;109:391:5:-;174:13;199:20;233:16;:24;250:6;233:24;;;;;;;;;;;;;;;;222:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;222:36:5;;;;199:59;;271:12;298:6;307:1;298:10;;294:176;314:7;:14;;;;310:1;:18;294:176;;;373:6;353:26;;:13;:16;367:1;353:16;;;;;;;;;;;;;;;;;;;;;:26;;;349:111;;;417:1;399:6;406:7;399:15;;;;;;;;;;;;;:19;;;;;436:9;;;;;;;349:111;330:3;;;;;;;294:176;;;;487:6;480:13;;;;109:391;;;:::o;1262:127:3:-;820:9;:7;:9::i;:::-;812:18;;;;;;1356:1;1319:40;;1340:6;;;;;;;;;;;1319:40;;;;;;;;;;;;1382:1;1365:6;;:19;;;;;;;;;;;;;;;;;;1262:127::o;637:70::-;674:7;696:6;;;;;;;;;;;689:13;;637:70;:::o;920:83::-;959:4;992:6;;;;;;;;;;;978:20;;:10;:20;;;971:27;;920:83;:::o;1547:101::-;820:9;:7;:9::i;:::-;812:18;;;;;;1615:28;1634:8;1615:18;:28::i;:::-;1547:101;:::o;1779:169::-;1868:1;1848:22;;:8;:22;;;;1840:31;;;;;;1911:8;1882:38;;1903:6;;;;;;;;;;;1882:38;;;;;;;;;;;;1935:8;1926:6;;:17;;;;;;;;;;;;;;;;;;1779:169;:::o;64:536:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"./ticketFactory.sol\";\n\ncontract TicketHelper is TicketFactory {\n    function getTicketsByOwner(address _owner) external view returns(uint[] memory) {\n        uint[] memory result = new uint[](ownerTicketCount[_owner]);   \n        uint counter;\n\n        for(uint i = 0; i < tickets.length; i++) {\n            if (ticketToOwner[i] == _owner) {\n                result[counter] = i;\n                counter++;\n            }\n        }\n\n        return result;\n    }\n\n    function getEventsLength() external view returns(uint) {\n        return events.length;\n    }\n}",
  "sourcePath": "/home/ali/source/secure-ticket/contracts/ticketHelper.sol",
  "ast": {
    "absolutePath": "/home/ali/source/secure-ticket/contracts/ticketHelper.sol",
    "exportedSymbols": {
      "TicketHelper": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 373,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:5"
      },
      {
        "absolutePath": "/home/ali/source/secure-ticket/contracts/ticketFactory.sol",
        "file": "./ticketFactory.sol",
        "id": 374,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 372,
        "src": "33:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 375,
              "name": "TicketFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 371,
              "src": "89:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TicketFactory_$371",
                "typeString": "contract TicketFactory"
              }
            },
            "id": 376,
            "nodeType": "InheritanceSpecifier",
            "src": "89:13:5"
          }
        ],
        "contractDependencies": [
          196,
          371
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          371,
          196
        ],
        "name": "TicketHelper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "189:311:5",
              "statements": [
                {
                  "assignments": [
                    387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 387,
                      "name": "result",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "199:20:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 385,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "199:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 386,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "199:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 395,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "ownerTicketCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 253,
                          "src": "233:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 393,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 392,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "250:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "233:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "222:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 388,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "226:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "226:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "222:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "199:59:5"
                },
                {
                  "assignments": [
                    397
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 397,
                      "name": "counter",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "271:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 396,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "271:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 398,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "271:12:5"
                },
                {
                  "body": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "335:135:5",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 410,
                              "name": "ticketToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "353:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 412,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 411,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 400,
                              "src": "367:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "353:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 413,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "373:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "353:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 425,
                        "nodeType": "IfStatement",
                        "src": "349:111:5",
                        "trueBody": {
                          "id": 424,
                          "nodeType": "Block",
                          "src": "381:79:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 415,
                                    "name": "result",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 387,
                                    "src": "399:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 417,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 416,
                                    "name": "counter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "406:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "399:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 418,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "417:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "399:19:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 420,
                              "nodeType": "ExpressionStatement",
                              "src": "399:19:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "436:9:5",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 421,
                                  "name": "counter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "436:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 423,
                              "nodeType": "ExpressionStatement",
                              "src": "436:9:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 403,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "310:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 404,
                        "name": "tickets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "314:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Ticket_$226_storage_$dyn_storage",
                          "typeString": "struct TicketFactory.Ticket storage ref[] storage ref"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "314:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "310:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "initializationExpression": {
                    "assignments": [
                      400
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 400,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "298:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 402,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "307:1:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "298:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "330:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 407,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "330:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 409,
                    "nodeType": "ExpressionStatement",
                    "src": "330:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "294:176:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 428,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 387,
                    "src": "487:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 383,
                  "id": 429,
                  "nodeType": "Return",
                  "src": "480:13:5"
                }
              ]
            },
            "documentation": null,
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTicketsByOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 378,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "136:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "136:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "135:16:5"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "174:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 380,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "174:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 381,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "174:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "173:15:5"
            },
            "scope": 441,
            "src": "109:391:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "561:37:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 436,
                      "name": "events",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 241,
                      "src": "578:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Event_$235_storage_$dyn_storage",
                        "typeString": "struct TicketFactory.Event storage ref[] storage ref"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "578:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 438,
                  "nodeType": "Return",
                  "src": "571:20:5"
                }
              ]
            },
            "documentation": null,
            "id": 440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEventsLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:2:5"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "555:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "554:6:5"
            },
            "scope": 441,
            "src": "506:92:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 442,
        "src": "64:536:5"
      }
    ],
    "src": "0:600:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/ali/source/secure-ticket/contracts/ticketHelper.sol",
      "exportedSymbols": {
        "TicketHelper": [
          441
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 373,
        "name": "PragmaDirective",
        "src": "0:31:5"
      },
      {
        "attributes": {
          "SourceUnit": 372,
          "absolutePath": "/home/ali/source/secure-ticket/contracts/ticketFactory.sol",
          "file": "./ticketFactory.sol",
          "scope": 442,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 374,
        "name": "ImportDirective",
        "src": "33:29:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            196,
            371
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            441,
            371,
            196
          ],
          "name": "TicketHelper",
          "scope": 442
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "TicketFactory",
                  "referencedDeclaration": 371,
                  "type": "contract TicketFactory"
                },
                "id": 375,
                "name": "UserDefinedTypeName",
                "src": "89:13:5"
              }
            ],
            "id": 376,
            "name": "InheritanceSpecifier",
            "src": "89:13:5"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getTicketsByOwner",
              "scope": 441,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_owner",
                      "scope": 431,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 377,
                        "name": "ElementaryTypeName",
                        "src": "136:7:5"
                      }
                    ],
                    "id": 378,
                    "name": "VariableDeclaration",
                    "src": "136:14:5"
                  }
                ],
                "id": 379,
                "name": "ParameterList",
                "src": "135:16:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 431,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 380,
                            "name": "ElementaryTypeName",
                            "src": "174:4:5"
                          }
                        ],
                        "id": 381,
                        "name": "ArrayTypeName",
                        "src": "174:6:5"
                      }
                    ],
                    "id": 382,
                    "name": "VariableDeclaration",
                    "src": "174:13:5"
                  }
                ],
                "id": 383,
                "name": "ParameterList",
                "src": "173:15:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        387
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "result",
                          "scope": 430,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "uint256[]",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "length": null,
                              "type": "uint256[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 385,
                                "name": "ElementaryTypeName",
                                "src": "199:4:5"
                              }
                            ],
                            "id": 386,
                            "name": "ArrayTypeName",
                            "src": "199:6:5"
                          }
                        ],
                        "id": 387,
                        "name": "VariableDeclaration",
                        "src": "199:20:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "length": null,
                                  "type": "uint256[]"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint",
                                      "type": "uint256"
                                    },
                                    "id": 388,
                                    "name": "ElementaryTypeName",
                                    "src": "226:4:5"
                                  }
                                ],
                                "id": 389,
                                "name": "ArrayTypeName",
                                "src": "226:6:5"
                              }
                            ],
                            "id": 390,
                            "name": "NewExpression",
                            "src": "222:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 253,
                                  "type": "mapping(address => uint256)",
                                  "value": "ownerTicketCount"
                                },
                                "id": 391,
                                "name": "Identifier",
                                "src": "233:16:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 378,
                                  "type": "address",
                                  "value": "_owner"
                                },
                                "id": 392,
                                "name": "Identifier",
                                "src": "250:6:5"
                              }
                            ],
                            "id": 393,
                            "name": "IndexAccess",
                            "src": "233:24:5"
                          }
                        ],
                        "id": 394,
                        "name": "FunctionCall",
                        "src": "222:36:5"
                      }
                    ],
                    "id": 395,
                    "name": "VariableDeclarationStatement",
                    "src": "199:59:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        397
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "counter",
                          "scope": 430,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 396,
                            "name": "ElementaryTypeName",
                            "src": "271:4:5"
                          }
                        ],
                        "id": 397,
                        "name": "VariableDeclaration",
                        "src": "271:12:5"
                      }
                    ],
                    "id": 398,
                    "name": "VariableDeclarationStatement",
                    "src": "271:12:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            400
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 427,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 399,
                                "name": "ElementaryTypeName",
                                "src": "298:4:5"
                              }
                            ],
                            "id": 400,
                            "name": "VariableDeclaration",
                            "src": "298:6:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 401,
                            "name": "Literal",
                            "src": "307:1:5"
                          }
                        ],
                        "id": 402,
                        "name": "VariableDeclarationStatement",
                        "src": "298:10:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 400,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 403,
                            "name": "Identifier",
                            "src": "310:1:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 238,
                                  "type": "struct TicketFactory.Ticket storage ref[] storage ref",
                                  "value": "tickets"
                                },
                                "id": 404,
                                "name": "Identifier",
                                "src": "314:7:5"
                              }
                            ],
                            "id": 405,
                            "name": "MemberAccess",
                            "src": "314:14:5"
                          }
                        ],
                        "id": 406,
                        "name": "BinaryOperation",
                        "src": "310:18:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 400,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 407,
                                "name": "Identifier",
                                "src": "330:1:5"
                              }
                            ],
                            "id": 408,
                            "name": "UnaryOperation",
                            "src": "330:3:5"
                          }
                        ],
                        "id": 409,
                        "name": "ExpressionStatement",
                        "src": "330:3:5"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "address"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 245,
                                          "type": "mapping(uint256 => address)",
                                          "value": "ticketToOwner"
                                        },
                                        "id": 410,
                                        "name": "Identifier",
                                        "src": "353:13:5"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 400,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 411,
                                        "name": "Identifier",
                                        "src": "367:1:5"
                                      }
                                    ],
                                    "id": 412,
                                    "name": "IndexAccess",
                                    "src": "353:16:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 378,
                                      "type": "address",
                                      "value": "_owner"
                                    },
                                    "id": 413,
                                    "name": "Identifier",
                                    "src": "373:6:5"
                                  }
                                ],
                                "id": 414,
                                "name": "BinaryOperation",
                                "src": "353:26:5"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 387,
                                                  "type": "uint256[] memory",
                                                  "value": "result"
                                                },
                                                "id": 415,
                                                "name": "Identifier",
                                                "src": "399:6:5"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 397,
                                                  "type": "uint256",
                                                  "value": "counter"
                                                },
                                                "id": 416,
                                                "name": "Identifier",
                                                "src": "406:7:5"
                                              }
                                            ],
                                            "id": 417,
                                            "name": "IndexAccess",
                                            "src": "399:15:5"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 400,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 418,
                                            "name": "Identifier",
                                            "src": "417:1:5"
                                          }
                                        ],
                                        "id": 419,
                                        "name": "Assignment",
                                        "src": "399:19:5"
                                      }
                                    ],
                                    "id": 420,
                                    "name": "ExpressionStatement",
                                    "src": "399:19:5"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "++",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 397,
                                              "type": "uint256",
                                              "value": "counter"
                                            },
                                            "id": 421,
                                            "name": "Identifier",
                                            "src": "436:7:5"
                                          }
                                        ],
                                        "id": 422,
                                        "name": "UnaryOperation",
                                        "src": "436:9:5"
                                      }
                                    ],
                                    "id": 423,
                                    "name": "ExpressionStatement",
                                    "src": "436:9:5"
                                  }
                                ],
                                "id": 424,
                                "name": "Block",
                                "src": "381:79:5"
                              }
                            ],
                            "id": 425,
                            "name": "IfStatement",
                            "src": "349:111:5"
                          }
                        ],
                        "id": 426,
                        "name": "Block",
                        "src": "335:135:5"
                      }
                    ],
                    "id": 427,
                    "name": "ForStatement",
                    "src": "294:176:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 383
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 387,
                          "type": "uint256[] memory",
                          "value": "result"
                        },
                        "id": 428,
                        "name": "Identifier",
                        "src": "487:6:5"
                      }
                    ],
                    "id": 429,
                    "name": "Return",
                    "src": "480:13:5"
                  }
                ],
                "id": 430,
                "name": "Block",
                "src": "189:311:5"
              }
            ],
            "id": 431,
            "name": "FunctionDefinition",
            "src": "109:391:5"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getEventsLength",
              "scope": 441,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 432,
                "name": "ParameterList",
                "src": "530:2:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 440,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 433,
                        "name": "ElementaryTypeName",
                        "src": "555:4:5"
                      }
                    ],
                    "id": 434,
                    "name": "VariableDeclaration",
                    "src": "555:4:5"
                  }
                ],
                "id": 435,
                "name": "ParameterList",
                "src": "554:6:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 435
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "length",
                          "referencedDeclaration": null,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 241,
                              "type": "struct TicketFactory.Event storage ref[] storage ref",
                              "value": "events"
                            },
                            "id": 436,
                            "name": "Identifier",
                            "src": "578:6:5"
                          }
                        ],
                        "id": 437,
                        "name": "MemberAccess",
                        "src": "578:13:5"
                      }
                    ],
                    "id": 438,
                    "name": "Return",
                    "src": "571:20:5"
                  }
                ],
                "id": 439,
                "name": "Block",
                "src": "561:37:5"
              }
            ],
            "id": 440,
            "name": "FunctionDefinition",
            "src": "506:92:5"
          }
        ],
        "id": 441,
        "name": "ContractDefinition",
        "src": "64:536:5"
      }
    ],
    "id": 442,
    "name": "SourceUnit",
    "src": "0:600:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-02-09T12:21:15.935Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}